/* imp-sysreg.h COPYRIGHT FUJITSU LIMITED 2016-2017 */
#ifndef __ASM_IMP_SYSREG_H
#define __ASM_IMP_SYSREG_H

#ifndef __ASSEMBLY__

/* macros */
#define PWR_REG_MASK(reg, feild)  (((UL(1) << ((reg##_##feild##_MSB) - (reg##_##feild##_LSB) + 1)) - 1) << (reg##_##feild##_LSB))
#define PWR_REG_SHIFT(reg, feild) (reg##_##feild##_LSB)

/* MIDR_EL1 */
//bits
#define MIDR_EL1_CMG_ID_MSB    9
#define MIDR_EL1_CMG_ID_LSB    8
//mask
#define MIDR_EL1_CMG_ID         PWR_REG_MASK(MIDR_EL1, CMG_ID)
//shift
#define MIDR_EL1_CMG_ID_SHIFT   PWR_REG_SHIFT(MIDR_EL1, CMG_ID)
//val
#define MIDR_EL1_IMPLEMENTER_FJ (0x46)
#define MIDR_EL1_PPNUM_TCHIP    (0x1)

/* Standby Control Register */
#define IMP_SOC_STANDBY_CTRL_EL1  sys_reg(3, 0, 11, 0, 0)

//bits
#define IMP_SOC_STANDBY_CTRL_EL1_ECO_MODE_MSB     2
#define IMP_SOC_STANDBY_CTRL_EL1_ECO_MODE_LSB     2
#define IMP_SOC_STANDBY_CTRL_EL1_MODE_CHANGE_MSB  1
#define IMP_SOC_STANDBY_CTRL_EL1_MODE_CHANGE_LSB  1
#define IMP_SOC_STANDBY_CTRL_EL1_RETENTION_MSB    0
#define IMP_SOC_STANDBY_CTRL_EL1_RETENTION_LSB    0
//mask
#define IMP_SOC_STANDBY_CTRL_EL1_ECO_MODE    PWR_REG_MASK(IMP_SOC_STANDBY_CTRL_EL1, ECO_MODE)
#define IMP_SOC_STANDBY_CTRL_EL1_MODE_CHANGE PWR_REG_MASK(IMP_SOC_STANDBY_CTRL_EL1, MODE_CHANGE)
#define IMP_SOC_STANDBY_CTRL_EL1_RETENTION   PWR_REG_MASK(IMP_SOC_STANDBY_CTRL_EL1, RETENTION)
//shift
#define IMP_SOC_STANDBY_CTRL_EL1_ECO_MODE_SHIFT    PWR_REG_SHIFT(IMP_SOC_STANDBY_CTRL_EL1, ECO_MODE)
#define IMP_SOC_STANDBY_CTRL_EL1_MODE_CHANGE_SHIFT PWR_REG_SHIFT(IMP_SOC_STANDBY_CTRL_EL1, MODE_CHANGE)
#define IMP_SOC_STANDBY_CTRL_EL1_RETENTION_SHIFT   PWR_REG_SHIFT(IMP_SOC_STANDBY_CTRL_EL1, RETENTION)

/* IMP FJ CORE UARCH RESTRECTION EL1 */
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1  sys_reg(3, 0, 11, 0, 5)

//bits
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICT_TRANS_MSB 40
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICT_TRANS_LSB 40
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_FL_RESTRICT_TRANS_MSB    33
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_FL_RESTRICT_TRANS_LSB    33
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_EX_RESTRICT_TRANS_MSB    32
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_EX_RESTRICT_TRANS_LSB    32
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICTION_MSB     9
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICTION_LSB     8
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_FL_RESTRICTION_MSB        1
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_FL_RESTRICTION_LSB        1
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_EX_RESTRICTION_MSB        0
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_EX_RESTRICTION_LSB        0
//mask
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICT_TRANS PWR_REG_MASK(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, ISSUE_RESTRICT_TRANS)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_FL_RESTRICT_TRANS    PWR_REG_MASK(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, FL_RESTRICT_TRANS)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_EX_RESTRICT_TRANS    PWR_REG_MASK(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, EX_RESTRICT_TRANS)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICTION    PWR_REG_MASK(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, ISSUE_RESTRICTION)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_FL_RESTRICTION       PWR_REG_MASK(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, FL_RESTRICTION)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_EX_RESTRICTION       PWR_REG_MASK(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, EX_RESTRICTION)
//shift
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICT_TRANS_SHIFT PWR_REG_SHIFT(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, ISSUE_RESTRICT_TRANS)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_FL_RESTRICT_TRANS_SHIFT    PWR_REG_SHIFT(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, FL_RESTRICT_TRANS)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_EX_RESTRICT_TRANS_SHIFT    PWR_REG_SHIFT(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, EX_RESTRICT_TRANS)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICTION_SHIFT    PWR_REG_SHIFT(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, ISSUE_RESTRICTION)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_FL_RESTRICTION_SHIFT       PWR_REG_SHIFT(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, FL_RESTRICTION)
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_EX_RESTRICTION_SHIFT       PWR_REG_SHIFT(IMP_FJ_CORE_UARCH_RESTRECTION_EL1, EX_RESTRICTION)
//val
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICTION_4INST 0
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICTION_1INST 1
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICTION_2INST 2
#define IMP_FJ_CORE_UARCH_RESTRECTION_EL1_ISSUE_RESTRICTION_3INST 3

/* Speed Control Register. */
#define SPEED_CONTROL_BASE ((void*)0x0000000028200000UL)
#define SPEED_CONTROL      SPEED_CONTROL_BASE

//bits
#define SPEED_CONTROL_TARGET_LEVEL_MSB         10
#define SPEED_CONTROL_TARGET_LEVEL_LSB          8
#define SPEED_CONTROL_DISABLE_TARGET_LEVEL_MSB  4
#define SPEED_CONTROL_DISABLE_TARGET_LEVEL_LSB  4
#define SPEED_CONTROL_BUSY_MSB                  3
#define SPEED_CONTROL_BUSY_LSB                  3
#define SPEED_CONTROL_ERROR_MSB                 2
#define SPEED_CONTROL_ERROR_LSB                 2
#define SPEED_CONTROL_VALID_MSB                 0
#define SPEED_CONTROL_VALID_LSB                 0
//mask
#define SPEED_CONTROL_TARGET_LEVEL         PWR_REG_MASK(SPEED_CONTROL, TARGET_LEVEL)
#define SPEED_CONTROL_DISABLE_TARGET_LEVEL PWR_REG_MASK(SPEED_CONTROL, DISABLE_TARGET_LEVEL)
#define SPEED_CONTROL_BUSY                 PWR_REG_MASK(SPEED_CONTROL, BUSY)
#define SPEED_CONTROL_ERROR                PWR_REG_MASK(SPEED_CONTROL, ERROR)
#define SPEED_CONTROL_VALID                PWR_REG_MASK(SPEED_CONTROL, VALID)
//shift
#define SPEED_CONTROL_TARGET_LEVEL_SHIFT         PWR_REG_SHIFT(SPEED_CONTROL, TARGET_LEVEL)
#define SPEED_CONTROL_DISABLE_TARGET_LEVEL_SHIFT PWR_REG_SHIFT(SPEED_CONTROL, DISABLE_TARGET_LEVEL)
#define SPEED_CONTROL_BUSY_SHIFT                 PWR_REG_SHIFT(SPEED_CONTROL, BUSY)
#define SPEED_CONTROL_ERROR_SHIFT                PWR_REG_SHIFT(SPEED_CONTROL, ERROR)
#define SPEED_CONTROL_VALID_SHIFT                PWR_REG_SHIFT(SPEED_CONTROL, VALID)

/* MACm CHn HBM POWER MANAGEMENT Register */
#define MAC0_CH0_HBM_POWER_MANAGEMENT_BASE ((void*)0x0000000028000000UL)
#define MAC0_CH1_HBM_POWER_MANAGEMENT_BASE (MAC0_CH0_HBM_POWER_MANAGEMENT_BASE + 0x0800)
#define MAC0_CH2_HBM_POWER_MANAGEMENT_BASE (MAC0_CH0_HBM_POWER_MANAGEMENT_BASE + 0x1000)
#define MAC0_CH3_HBM_POWER_MANAGEMENT_BASE (MAC0_CH0_HBM_POWER_MANAGEMENT_BASE + 0x1800)
#define MAC0_HBM_POWER_MANAGEMENT_BASE     (MAC0_CH0_HBM_POWER_MANAGEMENT_BASE + 0x2000)

#define MAC1_CH0_HBM_POWER_MANAGEMENT_BASE ((void*)0x0000000028010000UL)
#define MAC1_CH1_HBM_POWER_MANAGEMENT_BASE (MAC1_CH0_HBM_POWER_MANAGEMENT_BASE + 0x0800)
#define MAC1_CH2_HBM_POWER_MANAGEMENT_BASE (MAC1_CH0_HBM_POWER_MANAGEMENT_BASE + 0x1000)
#define MAC1_CH3_HBM_POWER_MANAGEMENT_BASE (MAC1_CH0_HBM_POWER_MANAGEMENT_BASE + 0x1800)
#define MAC1_HBM_POWER_MANAGEMENT_BASE     (MAC1_CH0_HBM_POWER_MANAGEMENT_BASE + 0x2000)

#define MAC2_CH0_HBM_POWER_MANAGEMENT_BASE ((void*)0x0000000028020000UL)
#define MAC2_CH1_HBM_POWER_MANAGEMENT_BASE (MAC2_CH0_HBM_POWER_MANAGEMENT_BASE + 0x0800)
#define MAC2_CH2_HBM_POWER_MANAGEMENT_BASE (MAC2_CH0_HBM_POWER_MANAGEMENT_BASE + 0x1000)
#define MAC2_CH3_HBM_POWER_MANAGEMENT_BASE (MAC2_CH0_HBM_POWER_MANAGEMENT_BASE + 0x1800)
#define MAC2_HBM_POWER_MANAGEMENT_BASE     (MAC2_CH0_HBM_POWER_MANAGEMENT_BASE + 0x2000)

#define MAC3_CH0_HBM_POWER_MANAGEMENT_BASE ((void*)0x0000000028030000UL)
#define MAC3_CH1_HBM_POWER_MANAGEMENT_BASE (MAC0_CH0_HBM_POWER_MANAGEMENT_BASE + 0x0800)
#define MAC3_CH2_HBM_POWER_MANAGEMENT_BASE (MAC0_CH0_HBM_POWER_MANAGEMENT_BASE + 0x1000)
#define MAC3_CH3_HBM_POWER_MANAGEMENT_BASE (MAC0_CH0_HBM_POWER_MANAGEMENT_BASE + 0x1800)
#define MAC3_HBM_POWER_MANAGEMENT_BASE     (MAC0_CH0_HBM_POWER_MANAGEMENT_BASE + 0x2000)

#define MACm_CHn_PTRL_REW_CTRL             0x420
#define MACm_CHn_HBM_POWER_MANAGEMENT      0x450
#define MACm_CHn_UTILITY0                  0x4A0
#define MACm_CHn_UTILITY1                  0x4A4
#define MACm_UTILITY0                      0x000
#define MACm_UTILITY1                      0x004

//bits
#define MACm_CHn_PTRL_REW_CTRL_PTRL_START_MSB        31
#define MACm_CHn_PTRL_REW_CTRL_PTRL_START_LSB        31
#define MACm_CHn_PTRL_REW_CTRL_PTRL_STOP_MSB         30
#define MACm_CHn_PTRL_REW_CTRL_PTRL_STOP_LSB         30
#define MACm_CHn_PTRL_REW_CTRL_PTRL_RESET_MSB        29
#define MACm_CHn_PTRL_REW_CTRL_PTRL_RESET_LSB        29
#define MACm_CHn_PTRL_REW_CTRL_PTRL_STATUS_MSB       28
#define MACm_CHn_PTRL_REW_CTRL_PTRL_STATUS_LSB       28
#define MACm_CHn_PTRL_REW_CTRL_PTRL_INTERVAL_MSB     27
#define MACm_CHn_PTRL_REW_CTRL_PTRL_INTERVAL_LSB     24
#define MACm_CHn_PTRL_REW_CTRL_PTRL_CANCEL_MSB       15
#define MACm_CHn_PTRL_REW_CTRL_PTRL_CANCEL_LSB       15
#define MACm_CHn_PTRL_REW_CTRL_PTRL_ADRS_MAX_MSB     14
#define MACm_CHn_PTRL_REW_CTRL_PTRL_ADRS_MAX_LSB     14
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_REQ_MSB     7
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_REQ_LSB     7
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_CANCEL_MSB  6
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_CANCEL_LSB  6
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_END_MSB     5
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_END_LSB     5
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_OPCD_MSB    3
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_OPCD_LSB    0
//mask
#define MACm_CHn_PTRL_REW_CTRL_PTRL_START        PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, PTRL_START)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_STOP         PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, PTRL_STOP)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_RESET        PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, PTRL_RESET)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_STATUS       PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, PTRL_STATUS)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_INTERVAL     PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, PTRL_INTERVAL)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_CANCEL       PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, PTRL_CANCEL)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_ADRS_MAX     PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, PTRL_ADRS_MAX)
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_REQ    PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, SINGLE_CMD_REQ)
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_CANCEL PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, SINGLE_CMD_CANCEL)
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_END    PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, SINGLE_CMD_END)
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_OPCD   PWR_REG_MASK(MACm_CHn_PTRL_REW_CTRL, SINGLE_CMD_OPCD)
//shift
#define MACm_CHn_PTRL_REW_CTRL_PTRL_START_SHIFT        PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, PTRL_START)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_STOP_SHIFT         PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, PTRL_STOP)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_RESET_SHIFT        PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, PTRL_RESET)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_STATUS_SHIFT       PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, PTRL_STATUS)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_INTERVAL_SHIFT     PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, PTRL_INTERVAL)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_CANCEL_SHIFT       PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, PTRL_CANCEL)
#define MACm_CHn_PTRL_REW_CTRL_PTRL_ADRS_MAX_SHIFT     PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, PTRL_ADRS_MAX)
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_REQ_SHIFT    PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, SINGLE_CMD_REQ)
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_CANCEL_SHIFT PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, SINGLE_CMD_CANCEL)
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_END_SHIFT    PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, SINGLE_CMD_END)
#define MACm_CHn_PTRL_REW_CTRL_SINGLE_CMD_OPCD_SHIFT   PWR_REG_SHIFT(MACm_CHn_PTRL_REW_CTRL, SINGLE_CMD_OPCD)

//bits
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_SET_MSB      31
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_SET_LSB      31
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_RST_MSB      30
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_RST_LSB      30
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_MSB          29
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_LSB          29
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_ENTER_MSB       27
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_ENTER_LSB       27
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_EXIT_MSB        26
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_EXIT_LSB        26
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_CANCEL_MSB      25
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_CANCEL_LSB      25
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_RUNNING_MSB     24
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_RUNNING_LSB     24
#define MACm_CHn_HBM_POWER_MANAGEMENT_HBM_THROTTLING_UNIT_TIME_MSB  7
#define MACm_CHn_HBM_POWER_MANAGEMENT_HBM_THROTTLING_UNIT_TIME_LSB  4
#define MACm_CHn_HBM_POWER_MANAGEMENT_HBM_THROTTLING_RATIO_MSB      3
#define MACm_CHn_HBM_POWER_MANAGEMENT_HBM_THROTTLING_RATIO_LSB      0
//mask
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_SET      PWR_REG_MASK(MACm_CHn_HBM_POWER_MANAGEMENT, POWER_DOWN_MODE_SET)
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_RST      PWR_REG_MASK(MACm_CHn_HBM_POWER_MANAGEMENT, POWER_DOWN_MODE_RST)
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE          PWR_REG_MASK(MACm_CHn_HBM_POWER_MANAGEMENT, POWER_DOWN_MODE)
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_ENTER       PWR_REG_MASK(MACm_CHn_HBM_POWER_MANAGEMENT, SELF_REFRESH_ENTER)
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_EXIT        PWR_REG_MASK(MACm_CHn_HBM_POWER_MANAGEMENT, SELF_REFRESH_EXIT)
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_CANCEL      PWR_REG_MASK(MACm_CHn_HBM_POWER_MANAGEMENT, SELF_REFRESH_CANCEL)
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_RUNNING     PWR_REG_MASK(MACm_CHn_HBM_POWER_MANAGEMENT, SELF_REFRESH_RUNNING)
#define MACm_CHn_HBM_POWER_MANAGEMENT_HBM_THROTTLING_UNIT_TIME PWR_REG_MASK(MACm_CHn_HBM_POWER_MANAGEMENT, HBM_THROTTLING_UNIT_TIME)
#define MACm_CHn_HBM_POWER_MANAGEMENT_HBM_THROTTLING_RATIO     PWR_REG_MASK(MACm_CHn_HBM_POWER_MANAGEMENT, HBM_THROTTLING_RATIO)
//shift
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_SET_SHIFT      PWR_REG_SHIFT(MACm_CHn_HBM_POWER_MANAGEMENT, POWER_DOWN_MODE_SET)
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_RST_SHIFT      PWR_REG_SHIFT(MACm_CHn_HBM_POWER_MANAGEMENT, POWER_DOWN_MODE_RST)
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_SHIFT          PWR_REG_SHIFT(MACm_CHn_HBM_POWER_MANAGEMENT, POWER_DOWN_MODE)
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_ENTER_SHIFT       PWR_REG_SHIFT(MACm_CHn_HBM_POWER_MANAGEMENT, SELF_REFRESH_ENTER)
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_EXIT_SHIFT        PWR_REG_SHIFT(MACm_CHn_HBM_POWER_MANAGEMENT, SELF_REFRESH_EXIT)
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_CANCEL_SHIFT      PWR_REG_SHIFT(MACm_CHn_HBM_POWER_MANAGEMENT, SELF_REFRESH_CANCEL)
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_RUNNING_SHIFT     PWR_REG_SHIFT(MACm_CHn_HBM_POWER_MANAGEMENT, SELF_REFRESH_RUNNING)
#define MACm_CHn_HBM_POWER_MANAGEMENT_HBM_THROTTLING_UNIT_TIME_SHIFT PWR_REG_SHIFT(MACm_CHn_HBM_POWER_MANAGEMENT, HBM_THROTTLING_UNIT_TIME)
#define MACm_CHn_HBM_POWER_MANAGEMENT_HBM_THROTTLING_RATIO_SHIFT     PWR_REG_SHIFT(MACm_CHn_HBM_POWER_MANAGEMENT, HBM_THROTTLING_RATIO)
//val
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_ON  1
#define MACm_CHn_HBM_POWER_MANAGEMENT_POWER_DOWN_MODE_OFF 0

#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_RUNNING_ON  1
#define MACm_CHn_HBM_POWER_MANAGEMENT_SELF_REFRESH_RUNNING_OFF 0

//bits
#define MACm_CHn_UTILITY0_UTILITY_DATA0_MSB 31
#define MACm_CHn_UTILITY0_UTILITY_DATA0_LSB  0
#define MACm_CHn_UTILITY1_UTILITY_DATA1_MSB 31
#define MACm_CHn_UTILITY1_UTILITY_DATA1_LSB  0
#define MACm_UTILITY0_UTILITY_DATA0_MSB     31
#define MACm_UTILITY0_UTILITY_DATA0_LSB      0
#define MACm_UTILITY1_UTILITY_DATA1_MSB     31
#define MACm_UTILITY1_UTILITY_DATA1_LSB      0
//mask
#define MACm_CHn_UTILITY0_UTILITY_DATA0 PWR_REG_MASK(MACm_CHn_UTILITY0, UTILITY_DATA0)
#define MACm_CHn_UTILITY1_UTILITY_DATA1 PWR_REG_MASK(MACm_CHn_UTILITY1, UTILITY_DATA1)
#define MACm_UTILITY0_UTILITY_DATA0     PWR_REG_MASK(MACm_UTILITY0, UTILITY_DATA0)
#define MACm_UTILITY1_UTILITY_DATA1     PWR_REG_MASK(MACm_UTILITY1, UTILITY_DATA1)
//shift
#define MACm_CHn_UTILITY0_UTILITY_DATA0_SHIFT PWR_REG_SHIFT(MACm_CHn_UTILITY0, UTILITY_DATA0)
#define MACm_CHn_UTILITY1_UTILITY_DATA1_SHIFT PWR_REG_SHIFT(MACm_CHn_UTILITY1, UTILITY_DATA1)
#define MACm_UTILITY0_UTILITY_DATA0_SHIFT     PWR_REG_SHIFT(MACm_UTILITY0, UTILITY_DATA0)
#define MACm_UTILITY1_UTILITY_DATA1_SHIFT     PWR_REG_SHIFT(MACm_UTILITY1, UTILITY_DATA1)

/* Energy Monitor Regsiter */
enum hardware_module {
	HM_INVALID      = -1,
	HM_NODE         = 0,
	HM_CORES0        = 4,
	HM_CORES1        = 5,
	HM_CORES2        = 6,
	HM_CORES3        = 7,
	HM_CMG0_L2      = 8,
	HM_CMG1_L2      = 9,
	HM_CMG2_L2      = 10,
	HM_CMG3_L2      = 11,
	HM_CMG0_MEM     = 12,
	HM_CMG1_MEM     = 13,
	HM_CMG2_MEM     = 14,
	HM_CMG3_MEM     = 15,
	HM_ACORE0       = 16,
	HM_ACORE1       = 17,
	HM_ACORE2       = 18,
	HM_ACORE3       = 19,
	HM_UNCMG        = 20,
	HM_TOFU         = 21,
	HM_PCIE         = 22,
	HM_TOFU_OPTICAL = 23,
};

#define ENERGY_MONITOR_BASE ((void*)0x0000000028210000UL)
#define EMWR0                 (0x000)
#define EMWR1                 (0x008)
#define EMWR2                 (0x010)
#define EMWR3                 (0x018)
#define EMWR4                 (0x020)
#define EMLR(hardware_module) (0x200 + (hardware_module) * 0x10)
#define EMSR(hardware_module) (0x208 + (hardware_module) * 0x10)
#define EMPR                  (0x100)
#define EMPHR                 (0x108)
#define EMCFR                 (0x120)

// bits
#define EMWR0_RESET_EMR_MSB    8
#define EMWR0_RESET_EMR_LSB    8
#define EMWR0_RESET_PERIOD_MSB 7
#define EMWR0_RESET_PERIOD_LSB 7
#define EMWR0_UNDER_34_MSB     6
#define EMWR0_UNDER_34_LSB     6
#define EMWR0_UNDER_12_MSB     5
#define EMWR0_UNDER_12_LSB     5
#define EMWR0_ISTATUS_34_MSB   4
#define EMWR0_ISTATUS_34_LSB   4
#define EMWR0_ISTATUS_12_MSB   3
#define EMWR0_ISTATUS_12_LSB   3
#define EMWR0_IMASK_34_MSB     2
#define EMWR0_IMASK_34_LSB     2
#define EMWR0_IMASK_12_MSB     1
#define EMWR0_IMASK_12_LSB     1
#define EMWR0_IENABLE_MSB      0
#define EMWR0_IENABLE_LSB      0
//mask
#define EMWR0_RESET_EMR    PWR_REG_MASK(EMWR0, RESET_EMR)
#define EMWR0_RESET_PERIOD PWR_REG_MASK(EMWR0, RESET_PERIOD)
#define EMWR0_UNDER_34     PWR_REG_MASK(EMWR0, UNDER_34)
#define EMWR0_UNDER_12     PWR_REG_MASK(EMWR0, UNDER_12)
#define EMWR0_ISTATUS_34   PWR_REG_MASK(EMWR0, ISTATUS_34)
#define EMWR0_ISTATUS_12   PWR_REG_MASK(EMWR0, ISTATUS_12)
#define EMWR0_IMASK_34     PWR_REG_MASK(EMWR0, IMASK_34)
#define EMWR0_IMASK_12     PWR_REG_MASK(EMWR0, IMASK_12)
#define EMWR0_IENABLE      PWR_REG_MASK(EMWR0, IENABLE)
//shift
#define EMWR0_RESET_EMR_SHIFT    PWR_REG_SHIFT(EMWR0, RESET_EMR)
#define EMWR0_RESET_PERIOD_SHIFT PWR_REG_SHIFT(EMWR0, RESET_PERIOD)
#define EMWR0_UNDER_34_SHIFT     PWR_REG_SHIFT(EMWR0, UNDER_34)
#define EMWR0_UNDER_12_SHIFT     PWR_REG_SHIFT(EMWR0, UNDER_12)
#define EMWR0_ISTATUS_34_SHIFT   PWR_REG_SHIFT(EMWR0, ISTATUS_34)
#define EMWR0_ISTATUS_12_SHIFT   PWR_REG_SHIFT(EMWR0, ISTATUS_12)
#define EMWR0_IMASK_34_SHIFT     PWR_REG_SHIFT(EMWR0, IMASK_34)
#define EMWR0_IMASK_12_SHIFT     PWR_REG_SHIFT(EMWR0, IMASK_12)
#define EMWR0_IENABLE_SHIFT      PWR_REG_SHIFT(EMWR0, IENABLE)

//bits
#define EMWR1_HIGH_PERIOD_MSB    31
#define EMWR1_HIGH_PERIOD_LSB    26
#define EMWR1_HIGH_THRESHOLD_MSB 25
#define EMWR1_HIGH_THRESHOLD_LSB  0
//mask
#define EMWR1_HIGH_PERIOD    PWR_REG_MASK(EMWR1, HIGH_PERIOD)
#define EMWR1_HIGH_THRESHOLD PWR_REG_MASK(EMWR1, HIGH_THRESHOLD)
//shift
#define EMWR1_HIGH_PERIOD_SHIFT    PWR_REG_SHIFT(EMWR1, HIGH_PERIOD)
#define EMWR1_HIGH_THRESHOLD_SHIFT PWR_REG_SHIFT(EMWR1, HIGH_THRESHOLD)

//bits
#define EMWR2_LOW_PERIOD_MSB     31
#define EMWR2_LOW_PERIOD_LSB     26
#define EMWR2_LOW_THRESHOLD_MSB  25
#define EMWR2_LOW_THRESHOLD_LSB   0
//mask
#define EMWR2_LOW_PERIOD    PWR_REG_MASK(EMWR2, LOW_PERIOD)
#define EMWR2_LOW_THRESHOLD PWR_REG_MASK(EMWR2, LOW_THRESHOLD)
//shift
#define EMWR2_LOW_PERIOD_SHIFT    PWR_REG_SHIFT(EMWR2, LOW_PERIOD)
#define EMWR2_LOW_THRESHOLD_SHIFT PWR_REG_SHIFT(EMWR2, LOW_THRESHOLD)

//bits
#define EMWR3_HIGH_PERIOD_MSB    31
#define EMWR3_HIGH_PERIOD_LSB    26
#define EMWR3_HIGH_THRESHOLD_MSB 25
#define EMWR3_HIGH_THRESHOLD_LSB  0
//mask
#define EMWR3_HIGH_PERIOD    PWR_REG_MASK(EMWR3, HIGH_PERIOD)
#define EMWR3_HIGH_THRESHOLD PWR_REG_MASK(EMWR3, HIGH_THRESHOLD)
//shift
#define EMWR3_HIGH_PERIOD_SHIFT    PWR_REG_SHIFT(EMWR3, HIGH_PERIOD)
#define EMWR3_HIGH_THRESHOLD_SHIFT PWR_REG_SHIFT(EMWR3, HIGH_THRESHOLD)

//bits
#define EMWR4_LOW_PERIOD_MSB     31
#define EMWR4_LOW_PERIOD_LSB     26
#define EMWR4_LOW_THRESHOLD_MSB  25
#define EMWR4_LOW_THRESHOLD_LSB   0
//mask
#define EMWR4_LOW_PERIOD   PWR_REG_MASK(EMWR4, LOW_PERIOD)
#define EMWR4_LOW_THRESHOLD PWR_REG_MASK(EMWR4, LOW_THRESHOLD)
//shift
#define EMWR4_LOW_PERIOD_SHIFT    PWR_REG_SHIFT(EMWR4, LOW_PERIOD)
#define EMWR4_LOW_THRESHOLD_SHIFT PWR_REG_SHIFT(EMWR4, LOW_THRESHOLD)

//bits
#define EMLRn_UNIT_MSB       31
#define EMLRn_UNIT_LSB       30
#define EMLRn_VALUE_MSB      29
#define EMLRn_VALUE_LSB       0
//mask
#define EMLRn_UNIT  PWR_REG_MASK(EMLRn, UNIT)
#define EMLRn_VALUE PWR_REG_MASK(EMLRn, VALUE)
//shift
#define EMLRn_UNIT_SHIFT  PWR_REG_SHIFT(EMLRn, UNIT)
#define EMLRn_VALUE_SHIFT PWR_REG_SHIFT(EMLRn, VALUE)

//bits
#define EMSRn_UNIT_MSB       31
#define EMSRn_UNIT_LSB       30
#define EMSRn_DIFF_COUNT_MSB 29
#define EMSRn_DIFF_COUNT_LSB 18
#define EMSRn_VALUE_MSB      17
#define EMSRn_VALUE_LSB       0
//mask
#define EMSRn_UNIT       PWR_REG_MASK(EMSRn, UNIT)
#define EMSRn_DIFF_COUNT PWR_REG_MASK(EMSRn, DIFF_COUNT)
#define EMSRn_VALUE      PWR_REG_MASK(EMSRn, VALUE)
//shift
#define EMSRn_UNIT_SHIFT       PWR_REG_SHIFT(EMSRn, UNIT)
#define EMSRn_DIFF_COUNT_SHIFT PWR_REG_SHIFT(EMSRn, DIFF_COUNT)
#define EMSRn_VALUE_SHIFT      PWR_REG_SHIFT(EMSRn, VALUE)

//bits
#define EMPR_UNIT_MSB        31
#define EMPR_UNIT_LSB        30
#define EMPR_NODE_POWER_MSB   8
#define EMPR_NODE_POWER_LSB   0
//mask
#define EMPR_UNIT       PWR_REG_MASK(EMPR, UNIT)
#define EMPR_NODE_POWER PWR_REG_MASK(EMPR, NODE_POWER)
//shift
#define EMPR_UNIT_SHIFT       PWR_REG_SHIFT(EMPR, UNIT)
#define EMPR_NODE_POWER_SHIFT PWR_REG_SHIFT(EMPR, NODE_POWER)

//bits
#define EMPHR_ENABLE_MSB     31
#define EMPHR_ENABLE_LSB     31
#define EMPHR_PEAK_HOLD_MSB   8
#define EMPHR_PEAK_HOLD_LSB   0
//mask
#define EMPHR_ENABLE    PWR_REG_MASK(EMPHR, ENABLE)
#define EMPHR_PEAK_HOLD PWR_REG_MASK(EMPHR, PEAK_HOLD)
//shift
#define EMPHR_ENABLE_SHIFT    PWR_REG_SHIFT(EMPHR, ENABLE)
#define EMPHR_PEAK_HOLD_SHIFT PWR_REG_SHIFT(EMPHR, PEAK_HOLD)

//bits
#define EMCFR_CMG3_CORE12_MSB  3
#define EMCFR_CMG3_CORE12_LSB  3
#define EMCFR_CMG2_CORE12_MSB  2
#define EMCFR_CMG2_CORE12_LSB  2
#define EMCFR_CMG1_CORE12_MSB  1
#define EMCFR_CMG1_CORE12_LSB  1
#define EMCFR_CMG0_CORE12_MSB  0
#define EMCFR_CMG0_CORE12_LSB  0
//mask
#define EMCFR_CMG3_CORE12 PWR_REG_MASK(EMCFR, CMG3_CORE12)
#define EMCFR_CMG2_CORE12 PWR_REG_MASK(EMCFR, CMG2_CORE12)
#define EMCFR_CMG1_CORE12 PWR_REG_MASK(EMCFR, CMG1_CORE12)
#define EMCFR_CMG0_CORE12 PWR_REG_MASK(EMCFR, CMG0_CORE12)
//shift
#define EMCFR_CMG3_CORE12_SHIFT PWR_REG_SHIFT(EMCFR, CMG3_CORE12)
#define EMCFR_CMG2_CORE12_SHIFT PWR_REG_SHIFT(EMCFR, CMG2_CORE12)
#define EMCFR_CMG1_CORE12_SHIFT PWR_REG_SHIFT(EMCFR, CMG1_CORE12)
#define EMCFR_CMG0_CORE12_SHIFT PWR_REG_SHIFT(EMCFR, CMG0_CORE12)

/* Node Energy Element Register */
#define NODE_ENERGY_ELEMENT_BASE ((void*)0x000000001C010000UL)
#define NODE_POWER               (0x0000)
#define NODE_ENERGY_ELEMENT      (0x0008)

//bits
#define NODE_POWER_PIN_MSB  9
#define NODE_POWER_PIN_LSB  0
//mask
#define NODE_POWER_PIN PWR_REG_MASK(NODE_POWER, PIN)
//shift
#define NODE_POWER_PIN_SHIFT PWR_REG_SHIFT(NODE_POWER, PIN)

//bits
#define NODE_ENERGY_ELEMENT_DIFF_COUNT_MSB        63
#define NODE_ENERGY_ELEMENT_DIFF_COUNT_LSB        56
#define NODE_ENERGY_ELEMENT_SAMPLECOUNT_MSB       55
#define NODE_ENERGY_ELEMENT_SAMPLECOUNT_LSB       32
#define NODE_ENERGY_ELEMENT_ERROR_MSB             31
#define NODE_ENERGY_ELEMENT_ERROR_LSB             31
#define NODE_ENERGY_ELEMENT_ENERGYACCUMULATOR_MSB 30
#define NODE_ENERGY_ELEMENT_ENERGYACCUMULATOR_LSB  0
//shift
#define NODE_ENERGY_ELEMENT_DIFF_COUNT        PWR_REG_MASK(NODE_ENERGY_ELEMENT, DIFF_COUNT)
#define NODE_ENERGY_ELEMENT_SAMPLECOUNT       PWR_REG_MASK(NODE_ENERGY_ELEMENT, SAMPLECOUNT)
#define NODE_ENERGY_ELEMENT_ERROR             PWR_REG_MASK(NODE_ENERGY_ELEMENT, ERROR)
#define NODE_ENERGY_ELEMENT_ENERGYACCUMULATOR PWR_REG_MASK(NODE_ENERGY_ELEMENT, ENERGYACCUMULATOR)
//bits
#define NODE_ENERGY_ELEMENT_DIFF_COUNT_SHIFT        PWR_REG_SHIFT(NODE_ENERGY_ELEMENT, DIFF_COUNT)
#define NODE_ENERGY_ELEMENT_SAMPLECOUNT_SHIFT       PWR_REG_SHIFT(NODE_ENERGY_ELEMENT, SAMPLECOUNT)
#define NODE_ENERGY_ELEMENT_ERROR_SHIFT             PWR_REG_SHIFT(NODE_ENERGY_ELEMENT, ERROR)
#define NODE_ENERGY_ELEMENT_ENERGYACCUMULATOR_SHIFT PWR_REG_SHIFT(NODE_ENERGY_ELEMENT, ENERGYACCUMULATOR)

#endif /* __ASSEMBLY__ */

#endif	/* __ASM_IMP_SYSREG_H */
